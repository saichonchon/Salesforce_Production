<!--
    Author  :   Jitendra Zaa
    Date    :   12/31/2014
    Address :   http://JitendraZaa.com
-->
<project name="Generate Package.xml" default="testPackageXML" basedir="." xmlns:sf="antlib:com.salesforce">
    
    <!-- 
        Import AntContrib 
        Download it from - http://mvnrepository.com/artifact/ant-contrib/ant-contrib/1.0b3 
    --> 
      <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
          <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
      </taskdef>
       
    <property file="GeneratePackage_xml.properties"/>
    <property environment="env"/> 
  
    <macrodef name="Package_fetchFolderContents"> 
        <attribute name="folderName"/>
        <attribute name="componentType"/>
        <attribute name="orgName"/> 
        <attribute name="sfUserName"/>
        <attribute name="sfPassword"/>
        <attribute name="sfServerURL"/>        
        <sequential>             
            <sf:listMetadata
                    username="@{sfUserName}"
                    password="@{sfPassword}" 
                    serverurl="@{sfServerURL}"
                    metadataType="@{componentType}" 
                    folder="@{folderName}"
                    resultFilePath="tmp/@{orgName}-@{componentType}-@{folderName}.log"/> 
            <if>
                <!-- Execute only if file created -->
                <available file="tmp/@{orgName}-@{componentType}-@{folderName}.log"/>
                <then>
                    <loadfile srcfile="tmp/@{orgName}-@{componentType}-@{folderName}.log" property="@{orgName}.@{componentType}.@{folderName}" >
                        <filterchain> 
                            <ignoreblank/>
                            <linecontains negate="false">
                                <contains value="FileName:"/>
                            </linecontains>                             
                            <prefixlines prefix="&lt;members&gt;"/>
                            <suffixlines suffix="&lt;/members&gt;"/>
                            <tokenfilter> 
                                <replacestring from="FileName: reports/" to=""/>
                                <replacestring from="FileName: documents/" to=""/>
                                <replacestring from="FileName: email/" to=""/> 
                                <replacestring from="FileName: dashboards/" to=""/>  
                                <replacestring from=".report" to=""/> 
                                <replacestring from=".email" to=""/> 
                                <replacestring from=".dashboard" to=""/> 
                            </tokenfilter>
                        </filterchain> 
                    </loadfile>                     
                    <concat destfile="tmp/@{orgName}.Package.xml.Snippet.@{componentType}" append="true"> 
                        ${@{orgName}.@{componentType}.@{folderName}}
                     </concat>
                    <!-- <echo> Extracted Report Names - ${@{orgName}.@{componentType}.@{folderName}} </echo> -->
               </then>
           </if>
        </sequential>    
    </macrodef>	
    <macrodef name="Package_computeFolderName">
        <attribute name="sfUserName"/>
        <attribute name="sfPassword"/>
        <attribute name="sfServerURL"/>   
        <attribute name="metadataType"/> 
        <attribute name="tmpFolderPath"/>   
        <attribute name="componentType"/>  
        <attribute name="orgName"/>           
        <sequential>                
            <sf:listMetadata
                    username="@{sfUserName}"
                    password="@{sfPassword}" 
                    serverurl="@{sfServerURL}"
                    metadataType="@{metadataType}" 
                    resultFilePath="@{tmpFolderPath}"/>
            <echo> Output file for sf:listMetadata - @{tmpFolderPath} </echo>          
            <loadfile srcfile="@{tmpFolderPath}" property="@{orgName}.@{metadataType}.onlyFolderName" >
                <filterchain> 
                    <ignoreblank/>
                    <linecontains negate="false">
                        <contains value="FileName"/>
                    </linecontains>  
                    <tokenfilter>
                        <replacestring from="FileName: reports/" to=""/>
                        <replacestring from="FileName: documents/" to=""/>
                        <replacestring from="FileName: email/" to=""/> 
                        <replacestring from="FileName: dashboards/" to=""/>  
                        <replacestring from="FileName: " to=""/>  
                        <replacestring from=" " to=""/>
                    </tokenfilter>
                </filterchain> 
            </loadfile>                      
            <for param="line" list="${@{orgName}.@{metadataType}.onlyFolderName}" delimiter="${line.separator}">
              <sequential> 
                <echo> Folder - @{line} </echo>  
                <concat destfile="tmp/@{orgName}.Package.xml.Snippet.@{componentType}" append="true">
                    &lt;members&gt; @{line} &lt;/members&gt; 
                </concat>                
                <Package_fetchFolderContents 
                    folderName="@{line}" 
                    componentType="@{componentType}" 
                    orgName="@{orgName}" 
                    sfusername="@{sfUserName}"
                    sfPassword="@{sfPassword}" 
                    sfServerURL="@{sfServerURL}" />                    
              </sequential>
            </for> 
        </sequential>
     </macrodef>     
    <macrodef name="GeneratePackage_xml">
        <attribute name="sfUserName"/>
        <attribute name="sfPassword"/>
        <attribute name="sfServerURL"/> 
        <!-- This attribute decides where to copy Package.xml -->
        <attribute name="packageXMLPath"/>  
        <attribute name="orgName"/>         
        <sequential>
            <!-- Create Fresh Files -->
            <touch file="tmp/@{orgName}.Package.xml.Snippet.Dashboard"/>
            <touch file="tmp/@{orgName}.Package.xml.Snippet.Report"/>
            <touch file="tmp/@{orgName}.Package.xml.Snippet.EmailTemplate"/>
            <touch file="tmp/@{orgName}.Package.xml.Snippet.Document"/>
            
            <!-- Empty Content in each file -->
            <property name="blankVal" value=""/> 
            <concat destfile="tmp/@{orgName}.Package.xml.Snippet.Dashboard" append="true"> ${blankVal} </concat>
            <concat destfile="tmp/@{orgName}.Package.xml.Snippet.Report" append="true"> ${blankVal} </concat>
            <concat destfile="tmp/@{orgName}.Package.xml.Snippet.EmailTemplate" append="true"> ${blankVal} </concat>
            <concat destfile="tmp/@{orgName}.Package.xml.Snippet.Document" append="true"> ${blankVal} </concat>            
             
            <!-- 
                Imp Step :
                1. We must assign Password to property and then pass to other Macro else it will ignore
                   all occurrences of '$' in password
                2. Property Name must be unique so safer to add Org Name also
            -->
            <property name="sfPassword.prop.@{orgName}" value="@{sfPassword}"/>        
            <Package_computeFolderName 
                sfUserName="@{sfUserName}"
                sfPassword="$${sfPassword.prop.@{orgName}}" 
                sfServerURL="@{sfServerURL}"
                metadataType="DashboardFolder"
                componentType = "Dashboard"                
                tmpFolderPath = "tmp/@{orgName}.DashboardFolders.log" 
                orgName="@{orgName}" 
            />    
             
            <Package_computeFolderName 
                sfUserName="@{sfUserName}"
                sfPassword="$${sfPassword.prop.@{orgName}}" 
                sfServerURL="@{sfServerURL}"
                metadataType="ReportFolder"  
                componentType="Report"
                tmpFolderPath = "tmp/@{orgName}.ReportFolders.log" 
                orgName="@{orgName}" 
            />  
            
            <Package_computeFolderName 
                sfUserName="@{sfUserName}"
                sfPassword="$${sfPassword.prop.@{orgName}}" 
                sfServerURL="@{sfServerURL}"
                metadataType="EmailFolder" 
                componentType="EmailTemplate"
                tmpFolderPath = "tmp/@{orgName}.EmailFolders.log" 
                orgName="@{orgName}" 
            />
               
            <Package_computeFolderName 
                sfUserName="@{sfUserName}"
                sfPassword="$${sfPassword.prop.@{orgName}}" 
                sfServerURL="@{sfServerURL}"
                metadataType="DocumentFolder" 
                componentType = "Document" 
                tmpFolderPath = "tmp/@{orgName}.DocumentFolders.log" 
                orgName="@{orgName}" 
            /> 
            
            <!-- Load Generated File content which has Snippet of Package.xml in Property -->
            <loadfile property="@{orgName}.DashboardFolder.log.edit" srcFile="tmp/@{orgName}.Package.xml.Snippet.Dashboard" failonerror="false"/>
            <loadfile property="@{orgName}.ReportFolder.log.edit" srcFile="tmp/@{orgName}.Package.xml.Snippet.Report" failonerror="false"/> 
            <loadfile property="@{orgName}.EmailFolder.log.edit" srcFile="tmp/@{orgName}.Package.xml.Snippet.EmailTemplate" failonerror="false"/>
            <loadfile property="@{orgName}.DocumentFolder.log.edit" srcFile="tmp/@{orgName}.Package.xml.Snippet.Document" failonerror="false"/>
            
            <copy file="${package.xml.template}" tofile="@{packageXMLPath}" overwrite="true" failonerror="true"/> 
            <replace file="@{packageXMLPath}">
                <replacefilter token="_replaceReportMembersTag_" value="${@{orgName}.ReportFolder.log.edit}"/> 
                <replacefilter token="_replaceEmailTemplateMembersTag_" value="${@{orgName}.EmailFolder.log.edit}"/> 
                <replacefilter token="_replaceDashboardMembersTag_" value="${@{orgName}.DashboardFolder.log.edit}"/> 
                <replacefilter token="_replaceDocumentMembersTag_" value="${@{orgName}.DocumentFolder.log.edit}"/> 
            </replace>            
        </sequential> 
    </macrodef>
    
    <target name="testPackageXML"> 
        <delete dir="${sf.xmlPath}" failonerror="true"/>
        <mkdir dir="${sf.xmlPath}"/>
        <GeneratePackage_xml
            sfUserName = "${sf.username}" 
            sfPassword = "${sf.password}${sf.token}"
            sfServerURL = "${sf.serverurl}"
            packageXMLPath = "${basedir}/Package.xml"
            orgName="${sf.name}"  />            
    </target>
</project>